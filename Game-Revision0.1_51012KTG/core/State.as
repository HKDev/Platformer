/* 	Revision History:	1.	Revision 0.1-051012 Kenny Gregory 	2.	3.	4.	5.*/package core {	import org.flixel.*			import other.Player;	import org.flixel.system.FlxTile;	public class State extends FlxState 	{		// -------------------------------------------------------------------- //		// stage		protected var sky:FlxTilemap;		public static var map:FlxTilemap;		protected var collision:Boolean;		// player		public static var player:Player;		// hud		public static var healthBar:FlxSprite;		// audio		protected var music:FlxSound;				// groups		public static var bullets:FlxGroup;		public static var enemyBullets:FlxGroup;		public static var enemies:FlxGroup;		public static var hearts:FlxGroup;		// embed		[Embed(source='../map/mapCSV_Level1_Map.csv', mimeType="application/octet-stream")] private var mapCSVClass:Class;		[Embed(source='../map/mapCSV_Level1_Sky.csv', mimeType="application/octet-stream")] private var skyCSVClass:Class;		[Embed(source='../map/backdrop.png')] private var skyTilesClass:Class;		[Embed(source='../assets/tiles.png')] private var mapTilesClass:Class;		[Embed(source='../assets/elevator.png')] private var elevatorClass:Class;		[Embed(source='../assets/backgroundmusic_track1.mp3')] private var musicTrack1Class:Class;		[Embed(source='../assets/heart.png')] private var heartClass:Class;		// -------------------------------------------------------------------- //				override public function create():void 		{						loadSky();			loadMap();						init();//			camera();//			loadHealthBar();//			loadMusic();			push();		}			// -------------------------------------------------------------------- //		override public function update():void 		{			super.update();			collisions();		}		// -------------------------------------------------------------------- //		// load sky tiles		private function loadSky():void 		{			sky = new FlxTilemap();			sky.loadMap(new skyCSVClass, skyTilesClass, 192,300,0,0,1,1);			sky.setTileProperties(1, FlxObject.NONE);		}				// load map tiles		private function loadMap():void 		{			map = new FlxTilemap();			map.loadMap(new mapCSVClass, mapTilesClass, 16,16,0,0,1,31);			map.setTileProperties(40, FlxObject.UP,null,null,4);		}		// initialize		private function init():void 		{//			bullets = new FlxGroup();//			enemyBullets = new FlxGroup();//			hearts = new FlxGroup();			player = new Player(48,48,bullets);		}		// camera		private function camera():void 		{			FlxG.worldBounds = new FlxRect(0,0, map.width,map.height);			FlxG.camera.setBounds(0,0, map.width,map.height);			FlxG.camera.follow(player, FlxCamera.STYLE_PLATFORMER);		}		// load health bar		private function loadHealthBar():void				{			// frame			var frame:FlxSprite = new FlxSprite((FlxG.stage.stageWidth - 100), 30);			frame.makeGraphic(54,10,0xFFFFF000);			frame.scrollFactor.x = 0;					// inside			var inside:FlxSprite = new FlxSprite((FlxG.stage.stageWidth - 99),51);			inside.makeGraphic(52,8,0xFF000000);			inside.scrollFactor.x = 0;					// bar				healthBar = new FlxSprite((FlxG.stage.stageWidth - 98),52);			healthBar.makeGraphic(50,6,0xFFFFF000);			healthBar.scrollFactor.x = 0;						add(frame);			add(inside);		}			// load music		private function loadMusic():void		{			music = new FlxSound();			music.loadEmbedded(musicTrack1Class,true,false);			music.volume = .5;			music.play(true);			FlxG.music = music;		}		// add  		private function push():void		{			add(sky);			add(map);			add(player);//			add(bullets);//			add(enemies);//			add(enemyBullets);//			add(hearts);//			add(healthBar);		}		// -------------------------------------------------------------------- //		private function collisions():void 		{			// use FlxG.collide for physical/automated detection 			// use FlxG.overlap  for custom/conditional situations			FlxG.collide(player,map);		}		// -------------------------------------------------------------------- //	}//class}//package