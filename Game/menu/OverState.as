/*	Memory Inspection: 	May,28 2012 (pass)*/package menu{		import core.Assets;	import core.State;	import org.flixel.FlxButton;	import org.flixel.FlxG;	import org.flixel.FlxSprite;	import org.flixel.FlxState;	import org.flixel.FlxText;		///////////////////////////////////////////////////////// [ CLASS ] ////////////////////////////////////////////////////////////////////////////	public class OverState extends FlxState 	{                		private var _time:Number;		private var _backBtn:FlxButton;		private var _retryBtn:FlxButton;		/* --------------------------- */// Create		override public function create():void 		{			// background            var bg:FlxSprite = new FlxSprite();            bg.loadGraphic(Assets.over_bgPNG);            bg.x = (FlxG.width - bg.width)/2;            bg.y = (FlxG.height - bg.height)/2;					            add(bg);            			// game over text			_time = 0;			FlxG.flash(0xffffffff, 1);			var t:FlxText = new FlxText(0, 0, 100, 'GAME OVER');            t.setFormat(null,12,0x00FF0000,"center",0xcccccc);			t.x = (FlxG.width - t.width)/2;			t.y = int(FlxG.height/5) - 20;			add(t);            			// score text            var score:FlxText = new FlxText(0, 0, 200, 'SCORE:0');            score.setFormat(null,12,0x00FF0000,"center",0xcccccc);            score.x = (FlxG.width - score.width)/2;            score.y = int(FlxG.height/5)+t.height-20;            score.text = "The Score:"+FlxG.score;            add(score);						// retry button			_retryBtn = new FlxButton();            _retryBtn.loadGraphic(Assets.over_retryBtnPNG,false,false,70,40);            _retryBtn.onDown = retryHandler;			_retryBtn.x = (FlxG.width - _retryBtn.width)/2;			_retryBtn.y = FlxG.height*0.5+60;			add(_retryBtn);						// back button			_backBtn = new FlxButton();            _backBtn.loadGraphic(Assets.over_backBtnPNG,false,false,70,40);            _backBtn.onDown = backHandler;			_backBtn.x = (FlxG.width - _backBtn.width)/2;			_backBtn.y = FlxG.height*0.5+100;			add(_backBtn);		}/* --------------------------- */// Transition to GamePlayState Handler				private function retryHandler():void		{			FlxG.fade(0xffffffff, 1, goGamePlayState);		}/* --------------------------- *///	Transition to MenuState Handler		private function backHandler():void		{			FlxG.fade(0xffffffff, 1, goMenuStatus);		}		/* --------------------------- */// Switch to MenuState		private function goMenuStatus():void		{			FlxG.switchState(new MenuState());		}/* --------------------------- */// Switch to new State		private function goGamePlayState():void		{			// TODO Auto Generated method stub			FlxG.switchState(new State());		}	}//class	}//package